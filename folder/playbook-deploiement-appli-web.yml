- name: build and deploy backend
  hosts: backend
  tasks:

    - name: build backend container
      docker_image:
        source: build
        build:
          path: /home/simon/VSCodeWorkspaces/docker-ambient/exercices/src/tp3/ambientitbackend
        name: docker-ambient-backend
        tag: v1
      
    - name: setup backend (not start)
      docker_container:
        image: docker-ambient-backend:v1
        name: backend
        auto_remove: true
        env:
          DB_USER: userexample
          DB_PASS: passwordexample
          DB: ambientit
          DB_HOST: db-ansible
        state: present


- name: build and deploy front
  hosts: frontend
  tasks:

    - name: build frontend container
      docker_image:
        source: build
        build:
          path: /home/simon/VSCodeWorkspaces/docker-ambient/exercices/src/tp3/ambientitfrontend
        name: docker-ambient-frontend
        tag: v1

    - name: deploy frontend
      docker_container:
        image: docker-ambient-frontend:v1
        name: frontend-ansible
        auto_remove: true
        published_ports: 
          - 80:5000


- name: deploy postgresql
  hosts: db
  tasks:

      - name: create volume for db
        docker_volume:
          name: dbVolumeAnsible

      - name: deploy db
        docker_container:
          image: postgres:latest
          name: db-ansible
          auto_remove: true
          volumes:
            - dbVolumeAnsible:/var/lib/postgresql/data
          env:
            POSTGRES_USER: userexample
            POSTGRES_PASSWORD: passwordexample
            POSTGRES_DB: ambientit


- name: deploy adminer
  hosts: adminer
  tasks:

      - name: deploy adminer
        docker_container:
          image: adminer
          name: adminer-ansible
          auto_remove: true
          published_ports: 
            - 8080:8080

- name: setup network
  hosts: all
  tasks:
    - name: setup network
      docker_network:
        name: network-bridge-ansible
        connected:
          - adminer-ansible
          - db-ansible
          - backend
          - frontend-ansible

- name: start backend
  hosts: backend
  tasks:
    - name: start backend
      docker_container:
        image: docker-ambient-backend:v1
        name: backend
        auto_remove: true
        env:
          DB_USER: userexample
          DB_PASS: '{{ DB_PASS }}'
          DB: ambientit
          DB_HOST: db-ansible
        state: started
